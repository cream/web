%% wiki

Meta Data
=========

Specification
-------------

Meta data is being stored in simple XML-files called `meta.xml`.

In the following the term *object* will be used for the module, widget, whatsoever, etc. being described by the meta data.

Required Entries
^^^^^^^^^^^^^^^^

Overview:

- `name`_
- `id`_
- `type`_
- `license`_
- `version`_

name
~~~~

A human-readable name for the object.

Example:

.. code-block:: xml

  <name>Foo</name>

id
~~

A short identification string for the object in reversed domain style. While we (the official team members) use the ``org.cream.*`` namespace, you should use something like ``com.apple.fancyinvention™`` (Note: You cannot really use "™" within the ID!).

Example:

.. code-block:: xml

  <id>org.cream.foo</id>

type
~~~~

The object's type. ``org.cream.module`` is being used for modules. You can use your own types like ``com.apple.coolinvention™.proprietarytype``.

Example:

.. code-block:: xml

  <type>org.cream.module</type>

license
~~~~~~~

The license(s) being used for this object.

Example:

.. code-block:: xml

  <license>GPL,BSD</license>

version
~~~~~~~

The version of the object.

Example:

.. code-block:: xml

  <version>0.1.4</version>

Optional Entries
^^^^^^^^^^^^^^^^

The following entries are being used in some cases. You can also use your own optional entries in ``meta.xml``-files if there is no conflict to the entries mentioned above and below!

icon
~~~~

(Relative) path to an image containing the icon for the object. This image should be a scalable graphic or have at least a resolution of 128x128px.

Example:

.. code-block:: xml

  <icon>foo.svg</icon>

authors
~~~~~~~

The names (and optionally email addresses) of contributing people.

Example:

.. code-block:: xml

  <authors>Jon Doe (jon@domain.tld), Max Mustermann</authors>

url
~~~

Homepage representing the object.

Example:

.. code-block:: xml

  <url>http://cream-project.org</url>

parent
~~~~~~

This can be used to specify relations between objects.

Example (as used in widgets):

.. code-block:: xml

  <parent>org.cream.melange</parent>

depends
~~~~~~~

A list of runtime dependencies needed to be loaded before starting this object. If you mark a dependency as not required, it could not be loaded. Do this only if the dependency is really optional!

Example:

.. code-block:: xml

  <depends>
      <module>org.cream.keyring</module>
      <module required="false">org.cream.hotkeys</module>
  </depends>

Implementation
--------------

TBA
